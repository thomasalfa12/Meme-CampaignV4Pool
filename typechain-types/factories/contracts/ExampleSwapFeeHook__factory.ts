/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ExampleSwapFeeHook,
  ExampleSwapFeeHookInterface,
} from "../../contracts/ExampleSwapFeeHook";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "recipientOrZero",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "HookCalled",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "afterSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "liquidity",
        type: "uint128",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "beforeSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "manager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b506040516105c03803806105c0833981016040819052602c91603c565b6001600160a01b0316608052606a565b600060208284031215604d57600080fd5b81516001600160a01b0381168114606357600080fd5b9392505050565b60805161053c610084600039600060af015261053c6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80634ff4172d1161005b5780634ff4172d146100ed5780635b135c6814610100578063ab62b06214610113578063ad115d461461012657600080fd5b8063132f3be8146100825780632dbdb68514610097578063481c6a75146100aa575b600080fd5b61009561009036600461040f565b610139565b005b6100956100a5366004610470565b6101a4565b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100956100fb36600461040f565b610210565b61009561010e366004610470565b610271565b61009561012136600461040f565b6102d3565b61009561013436600461040f565b610333565b604080516080808252600a90820152693132b337b932a13ab93760b11b60a08201526001600160a01b03861660208201526000918101919091526001600160801b03841660608201526000805160206104e78339815191529060c0015b60405180910390a150505050565b6040805160808082526009908201526806166746572537761760bc1b60a08201526001600160a01b0380881660208301528616918101919091526001600160801b03841660608201526000805160206104e78339815191529060c0015b60405180910390a15050505050565b604080516080808252600a90820152691899599bdc99535a5b9d60b21b60a08201526001600160a01b03861660208201526000918101919091526001600160801b03841660608201526000805160206104e78339815191529060c001610196565b604080516080808252600a908201526906265666f7265537761760b41b60a08201526001600160a01b0380881660208301528616918101919091526001600160801b03841660608201526000805160206104e78339815191529060c001610201565b6040805160808082526009908201526818599d195c935a5b9d60ba1b60a08201526001600160a01b03861660208201526000918101919091526001600160801b03841660608201526000805160206104e78339815191529060c001610196565b6040805160808082526009908201526830b33a32b9213ab93760b91b60a08201526001600160a01b03861660208201526000918101919091526001600160801b03841660608201526000805160206104e78339815191529060c001610196565b80356001600160a01b03811681146103aa57600080fd5b919050565b80356001600160801b03811681146103aa57600080fd5b60008083601f8401126103d857600080fd5b50813567ffffffffffffffff8111156103f057600080fd5b60208301915083602082850101111561040857600080fd5b9250929050565b6000806000806060858703121561042557600080fd5b61042e85610393565b935061043c602086016103af565b9250604085013567ffffffffffffffff81111561045857600080fd5b610464878288016103c6565b95989497509550505050565b60008060008060006080868803121561048857600080fd5b61049186610393565b945061049f60208701610393565b93506104ad604087016103af565b9250606086013567ffffffffffffffff8111156104c957600080fd5b6104d5888289016103c6565b96999598509396509294939250505056fe447532dadfbd7914b0f7da1b3e88f88923536ad4904dbbb39512de152ef80b3fa264697066735822122098d92072e95dd20786e8266939170c096c76a6e55569fc423123daac42145b3c64736f6c634300081c0033";

type ExampleSwapFeeHookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleSwapFeeHookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleSwapFeeHook__factory extends ContractFactory {
  constructor(...args: ExampleSwapFeeHookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_manager, overrides || {});
  }
  override deploy(
    _manager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_manager, overrides || {}) as Promise<
      ExampleSwapFeeHook & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExampleSwapFeeHook__factory {
    return super.connect(runner) as ExampleSwapFeeHook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleSwapFeeHookInterface {
    return new Interface(_abi) as ExampleSwapFeeHookInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExampleSwapFeeHook {
    return new Contract(address, _abi, runner) as unknown as ExampleSwapFeeHook;
  }
}
